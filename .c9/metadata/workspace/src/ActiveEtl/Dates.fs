{"filter":false,"title":"Dates.fs","tooltip":"/src/ActiveEtl/Dates.fs","undoManager":{"mark":7,"position":7,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["[<AutoOpen>]","module JA.FIPA.Utils.Dates","","open System","open System.Text","open System.Globalization","open FSharp.RegexProvider","","[<Literal>]","let DateRegexLiteral = \"(?<Date>(?<year>\\d\\d\\d\\d)-?(?<month>[01]\\d)-?(?<day>[0123]\\d))\"","  ","type DateRegex = Regex<DateRegexLiteral>","","let tryParseDate dateStr =","  match DateTime.TryParseExact(dateStr, \"yyyyMMdd\", CultureInfo.InvariantCulture, DateTimeStyles.None) with","  | false, _ ->","    match DateTime.TryParseExact(dateStr, \"yyyy-MM-dd\", CultureInfo.InvariantCulture, DateTimeStyles.None) with","    | false, _ -> ","      match DateTime.TryParse(dateStr) with      ","      | false,_ -> dateStr |> sprintf \"The date must be a valid date. The given value of '%s' was not valid.\" |> failwith","      | true, date -> date","    | true, date -> date","  | true,date -> date","",""]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":7},"end":{"row":1,"column":14},"action":"remove","lines":["JA.FIPA"]},{"start":{"row":1,"column":7},"end":{"row":1,"column":25},"action":"insert","lines":["Eleven19.ActiveEtl"]}]}],[{"group":"doc","deltas":[{"start":{"row":11,"column":0},"end":{"row":11,"column":1},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":11,"column":1},"end":{"row":11,"column":2},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":6,"column":0},"end":{"row":6,"column":1},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":6,"column":1},"end":{"row":6,"column":2},"action":"insert","lines":["/"]}]}],[{"group":"doc","deltas":[{"start":{"row":24,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":25,"column":0},"end":{"row":39,"column":24},"action":"insert","lines":["type DateRange = {","  StartDate:DateTime","  EndDate:DateTime option","}","","[<CompilationRepresentation(CompilationRepresentationFlags.ModuleSuffix)>]","module DateRange =","  open System","  let defaults =","    {StartDate= DateTime.Today; EndDate= Some DateTime.Today}","","  let createRange startDate endDate =","    {StartDate=startDate; EndDate=endDate;}","","  let create startDate ="]}]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":32,"column":13},"end":{"row":32,"column":13},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1426886066000,"hash":"24951657916f29fb0261c192351953fd0c7149fb"}